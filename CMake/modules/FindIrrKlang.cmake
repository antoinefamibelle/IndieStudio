macro(GetIrrKlangPath)
    find_path(IRRKLANG_INCLUDE_DIR NAMES irrKlang.h PATHS /usr/include /usr/include/irrklang /usr/local/include /usr/local/include/irrklang /opt/local/include /sw/include /usr/lib64/ /usr/lib/ /usr/lib/x86_64-linux-gnu/ /usr/local/lib/ /usr/local/lib64/ /usr/lib /usr/local/lib /opt/local/lib /sw/lib)
    if(IRRKLANG_INCLUDE_DIR STREQUAL "IRRKLANG_INCLUDE_DIR-NOTFOUND")
        unset(IRRKLANG_INCLUDE_DIR)
        find_path(IRRKLANG_INCLUDE_DIR NAMES irrKlang.h PATHS ${CMAKE_CURRENT_SOURCE_DIR}/libraries/irrklang/includes)
    endif(IRRKLANG_INCLUDE_DIR STREQUAL "IRRKLANG_INCLUDE_DIR-NOTFOUND")
endmacro()

macro(CheckIfIrrKlangDll)
    find_path(IRRKLANG_DLL NAMES IrrKlang.dll PATHS ${CMAKE_CURRENT_SOURCE_DIR}/Release)
    find_path(IRRKLANG_DLL_DEBUG NAMES IrrKlang.dll PATHS ${CMAKE_CURRENT_SOURCE_DIR}/Debug)
    if (IRRKLANG_DLL_FOUND)
        message("${Blue}-- Release: IrrKlang.dll found into:")
        message("->  ${IRRKLANG_DLL}")
    endif(IRRKLANG_DLL_FOUND)
    if (IRRKLANG_DLL_DEBUG_FOUND)
        message("${Blue}-- Debug: IrrKlang.dll found into:")
        message("->  ${IRRKLANG_DLL_DEBUG}")
    endif(IRRKLANG_DLL_DEBUG_FOUND)
    if (IRRKLANG_DLL)
        set(IRRKLANG_DLL_FOUND TRUE)
    endif(IRRKLANG_DLL)
    if (IRRKLANG_DLL_DEBUG)
        set(IRRKLANG_DLL_DEBUG_FOUND TRUE)
    endif(IRRKLANG_DLL_DEBUG)
endmacro()

macro(GetIrrKlangLib)
    if (UNIX OR APPLE)
#        find_library(IRRKLANG_LIBRARY NAMES IrrKlang PATHS /usr/include /usr/include/irrklang /usr/local/include /usr/local/include/irrklang /opt/local/include /sw/include /usr/lib64/ /usr/lib/ /usr/lib/x86_64-linux-gnu/ /usr/local/lib/ /usr/local/lib64/ /usr/lib /usr/local/lib /opt/local/lib /sw/lib)
        file(GLOB_RECURSE IRRKLANG_LIBRARY PATHS ${CMAKE_CURRENT_SOURCE_DIR}/libraries/irrklang libIrrklang.so)
    endif (UNIX OR APPLE)
    if (MSVC OR WIN32)
        file(GLOB_RECURSE IRRKLANG_LIBRARY PATHS ${CMAKE_CURRENT_SOURCE_DIR}/libraries/irrklang IrrKlang.lib)
    endif(MSVC OR WIN32)
endmacro()

macro(SetIrrKlangIncludeAndLib)
    set(IRRKLANG_INCLUDE_DIRS ${IRRKLANG_INCLUDE_DIR})
    set(IRRKLANG_LIBRARIES ${IRRKLANG_LIBRARIES} ${IRRKLANG_LIBRARY})
endmacro()

macro(PrintIrrKlangLoad)
    if (UNIX OR APPLE)
        if (IRRKLANG_INCLUDE_DIRS AND IRRKLANG_LIBRARIES)
            set(IRRKLANG_FOUND TRUE)
        endif (IRRKLANG_INCLUDE_DIRS AND IRRKLANG_LIBRARIES)
    endif (UNIX OR APPLE)
    if (MSVC OR WIN32)
        if (IRRKLANG_INCLUDE_DIRS AND IRRKLANG_LIBRARIES AND IRRKLANG_DLL)
            set(IRRKLANG_FOUND TRUE)
        endif (IRRKLANG_INCLUDE_DIRS AND IRRKLANG_LIBRARIES AND IRRKLANG_DLL)
    endif (MSVC OR WIN32)
endmacro()

macro(PrintIrrKlangFounded)
    if (IRRKLANG_FOUND)
        message("${Blue}-- Found IrrKlang lib:")
        message("->  ${IRRKLANG_LIBRARIES}")
        message("${Blue}-- Found IrrKlang include directory:")
        message("->  ${IRRKLANG_INCLUDE_DIRS}")
    endif(IRRKLANG_FOUND)
endmacro()

PrintIrrKlangFounded()
GetIrrKlangPath()
GetIrrKlangLib()
if (MSVC OR WIN32)
    CheckIfIrrKlangDll()
endif(MSVC OR WIN32)
SetIrrKlangIncludeAndLib()
PrintIrrKlangLoad()
PrintIrrKlangFounded()